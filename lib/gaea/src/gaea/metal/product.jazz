;;;==============
;;;  GaeaScheme
;;;==============
;;;
;;;; Metal Product
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2021
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(unit gaea.metal.product


;;;
;;;; Build
;;;


(cond-expand
  (mac
    (define jazz:custom-cc
      'llvm))
  (else))


(cond-expand
  (cocoa
    (define jazz:gaea-metal-units
      `((gaea.metal ld-options: ,(string-append "-framework Cocoa -framework Metal -framework MetalKit -framework QuartzCore") custom-cc: ,jazz:custom-cc output-language: objc)))))


(define (jazz:build-gaea-metal descriptor #!key (unit #f) (skip-references? #f) (force? #f))
  (let ((unit-specs jazz:gaea-metal-units))
    (jazz:custom-compile/build unit-specs unit: unit force?: force?)
    (if (or (not unit) (not (assq unit unit-specs)))
        (jazz:build-product-descriptor descriptor unit: unit skip-references?: skip-references? force?: force?))))


(define (jazz:gaea-metal-library-options descriptor add-language)
  (cond-expand
    (cocoa
      (list "-framework" "Cocoa" "-framework" "Metal" "-framework MetalKit" "-framework" "QuartzCore"))))


;;;
;;;; Register
;;;


(jazz:register-product 'gaea.metal
  build: jazz:build-gaea-metal
  options: jazz:gaea-metal-units
  library-options: jazz:gaea-metal-library-options))
