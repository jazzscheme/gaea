;;;==============
;;;  GaeaScheme
;;;==============
;;;
;;;; Movement
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2021
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;    Alain Marcotte
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module gaea.movement jazz


(import (gaea.geometry.base)
        (gaea.geometry.classes)
        (gaea.geometry.syntax (phase syntax))
        (gaea.homogeneous))


(proclaim (warn optimizations))

(declare (optimize-dead-local-variables))


;;;
;;;; Movement
;;;


(class Movement extends Object
  
  
  (slot origin <vertex> initialize (make-vertex) getter generate)
  (slot vector <vertex> initialize (make-vertex) getter generate)
  (slot normal <vertex> initialize (make-vertex) getter generate)
  (slot length <fl>     initialize (make-fl)     getter generate)
  
  
  (method override (initialize self orig <vertex> vec <vertex>)
    (set-origin self orig)
    (set-vector self vec))
  
  
  (method override (print self output readably)
    (print-unreadable self output
      (lambda (output)
        (format output "{a} {a} {a}" origin vector length))))
  
  
  (method public (set-origin self orig <vertex>) <void>
    (vertex-copy! origin orig))
  
  
  (method public (set-vector self vec <vertex>) <void>
    (assert (not (vertex-zero? vec)))
    (vertex-copy! vector vec)
    (vertex-normalize-safe! normal vec)
    (fl! length (f64-ref (vertex-norm^ vec))))))
